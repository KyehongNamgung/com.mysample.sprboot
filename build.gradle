plugins {
    id 'org.springframework.boot' version '2.2.3.RELEASE'
    id "org.asciidoctor.convert" version '1.5.9.2'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id "net.saliman.cobertura" version "3.0.0"
    id 'war'
}

apply plugin: 'war'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.ewerk.gradle.plugins.querydsl'
apply plugin: 'cobertura'

bootWar {
    archiveName = 'ROOT.war'
}

group 'com.mysample.sprboot'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "http://dv-nexus.midasweb.net/repository/maven-public/"
    }
    maven {
        url "https://repo.spring.io/milestone"
    }
}

dependencies {
    //compile('org.springframework.boot:spring-boot-starter-web')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compile('org.projectlombok:lombok:1.18.10')
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    //compile('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //compile('com.h2database:h2')
    implementation 'com.h2database:h2:1.4.200'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.session:spring-session-jdbc'

    testCompile('org.projectlombok:lombok:1.18.10')
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.10'
    testCompile("org.springframework.security:spring-security-test")

    //testCompile('org.springframework.boot:spring-boot-starter-test')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

//test {
  //  useJUnitPlatform()
//}

// querydsl
def querydslSrcDir = 'src/main/querydsl'

querydsl {
    jpa = true
    querydslSourcesDir = querydslSrcDir
    library = "com.querydsl:querydsl-apt"
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
